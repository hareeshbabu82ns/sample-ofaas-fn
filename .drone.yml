kind: pipeline
name: ofs-fn

steps:
  
## activate tests in future  
# - name: ofs-fn - test
#   image: node:14-alpine
#   commands:
#   - yarn install
#   - yarn test
#   when:
#     branch:
#     - docker

# For Custom Docker Registry
- name: ofs-fn - build docker image
  image: docker:latest
  volumes:
    - name: docker_sock
      path: /var/run/docker.sock
  environment:
    DUSER:
      from_secret: docker_user
    DPASS:
      from_secret: docker_pass
    SERVER_DOMAIN:
      from_secret: server_domain
    CI_OPENFAAS_PASSWORD:
      from_secret: open_faas_cli_pass
    DRONE_TAG: ${DRONE_TAG}
    OPENFAAS_URL:
      from_secret: open_faas_url
  commands:
    - apk add --no-cache git
    - if [ -f "./faas-cli" ] ; then cp ./faas-cli /usr/local/bin/faas-cli || 0 ; fi
    - if [ ! -f "/usr/local/bin/faas-cli" ] ; then apk add --no-cache curl git && curl -sSL cli.openfaas.com | sh && chmod +x /usr/local/bin/faas-cli && /usr/local/bin/faas-cli template pull && cp /usr/local/bin/faas-cli ./faas-cli ; fi

    # move to project directory
    - cd js

    # Build Docker image
    - /usr/local/bin/faas-cli build --tag=latest --parallel=2

    # Login & Push Docker image to private repo
    - docker login -p $DPASS -u $DUSER docker.$SERVER_DOMAIN
    - /usr/local/bin/faas-cli push --tag=latest
    - echo -n "$CI_OPENFAAS_PASSWORD" | /usr/local/bin/faas-cli login --username admin --password-stdin

    # Deploy function from private repo
    - /usr/local/bin/faas-cli deploy -n staging-fn --tag=latest
    
  # when:
  #   event:
  #   - tag
    # branch:
    # - main

# Finally common tasks for all steps
- name: notify
  image: plugins/slack
  settings:
    channel: pipelines
    webhook:
      from_secret: pipeline_notifier
    icon_emoji: ":rocket:"
    # icon_url: https://unsplash.it/48/48/?random
    # image_url: https://unsplash.it/256/256/?random
    template: >
      {{#if build.pull }}
        *{{#success build.status}}✔{{ else }}✘{{/success}} {{ uppercasefirst build.status }}*: <https://github.com/{{ repo.owner }}/{{ repo.name }}/pull/{{ build.pull }}|Pull Request #{{ build.pull }}>
      {{else}}
        *{{#success build.status}}✔{{ else }}✘{{/success}} {{ uppercasefirst build.status }}: Build #{{ build.number }}* (type: `{{ build.event }}`)
      {{/if}}

      Repo: {{ repo.name }}

      Commit: <https://github.com/{{ repo.owner }}/{{ repo.name }}/commit/{{ build.commit }}|{{ truncate build.commit 8 }}>
      
      Branch: <https://github.com/{{ repo.owner }}/{{ repo.name }}/commits/{{ build.branch }}|{{ build.branch }}>

      Author: {{ build.author }}

      <{{ build.link }}|Visit build page ↗>
  when:
    status: [ success, failure ]

volumes:
  - name: docker_sock
    host:
      path: /var/run/docker.sock